@startuml

title Domain Model Excerpt

hide methods
left to right direction

skinparam classAttributeIconSize 0

skinparam class {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #D8F5FF
    ArrowColor DodgerBlue
    BorderColor DodgerBlue
}

skinparam packageStyle rectangle

skinparam card {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #D8F5FF
    ArrowColor DodgerBlue
    BorderColor DodgerBlue
}

package "User Aggregate" {
    entity User <<entity>><<root>>

'User value objects
    card EmailAddress <<Value Object>>{
    }
    card Password <<Value Object>>{
    }
    card FullName <<Value Object>>{
    }
    card ShortName <<Value Object>>{
    }
    card UserState <<Value Object>>{
    }
    card MechanographicNumber <<Value Object>>{
    }
    card Acronym <<Value Object>> {
    }
    card BirthDate <<Value Object>> {
    }
    card TaxPayerNumber <<Value Object>> {
    }
    card Role <<Value Object>> {
    }

    note right of Role: Can be Teacher, Student or Manager

    User --> EmailAddress
    User --> Password
    User --> FullName
    User --> ShortName
    User --> Role
    User --> UserState
    User --> MechanographicNumber
    User --> Acronym
    User --> BirthDate
    User --> TaxPayerNumber

    note left of Role
        This is only used for purposes
        of authorization
    end note
}

package "Course Aggregate" {
    entity Course <<entity>><<root>>

    'Course value objects
    card Code <<Value Object>> {
    }
    card Name <<Value Object>>{
    }
    card State <<Value Object>>{
    }
    card Description <<Value Object>>{
    }
    card Limit <<Value Object>>{
    }
    card Edition <<Value Object>>{
    }

    Course --> Name
    Course --> State
    Course --> Description
    Course --> Limit
    Course --> Code
    Course --> Edition

    note right of State
        Can be one of the following:
            - Open
            - Closed
            - Enroll
            - InProgress
    end note

    note left of Limit
        Each course as a lower
        and higher limit
        number of students
    end note

    note right of Code
        Each course has a unique code
        Example: "JAVA-1"
    end note

    note left of Edition
        Different editions of a course
        are to be considered different
        courses
    end note


    entity Class <<entity>>

    card ClassTime <<Value Object>>{
    }

    card ClassTitle <<Value Object>>{
    }

    card ClassDayOfWeek <<Value Object>>{
    }

    note right of ClassTitle
        A class must have a unique title
    end note

    Class --> ClassTime
    Class --> ClassTitle
    Class --> ClassDayOfWeek
    Course --> "*" Class : contains
}


    Course --> "1" User : is owned
    Course --> "N" User : has
    Course --> "N" User : teaches

    Class --> User : has participants
    Class --> User : has teacher

@enduml