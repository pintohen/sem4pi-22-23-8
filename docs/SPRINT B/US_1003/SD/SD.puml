@startuml
actor Manager

autonumber

participant ChangeStateEnrollmentUI <<presentation>>
participant ChangeStateController<<application>>
participant CourseManagementService<<service>>
participant Course<<course>>
participant PersistenceContext<<persistence>>
participant RepositoryFactory<<factory>>
database CourseRepository <<repository>>

activate Manager

Manager -> ChangeStateEnrollmentUI : Change the state of a course

activate ChangeStateEnrollmentUI

ChangeStateEnrollmentUI -> Manager : Asks for the course's code

deactivate ChangeStateEnrollmentUI

Manager -> ChangeStateEnrollmentUI : Code

activate ChangeStateEnrollmentUI

ChangeStateEnrollmentUI -> ChangeStateController : verifyCourse(code)

activate ChangeStateController

ChangeStateController -> PersistenceContext : repositories()

activate PersistenceContext

PersistenceContext -> ChangeStateController : factory

deactivate PersistenceContext

ChangeStateController -> RepositoryFactory : courses()

activate RepositoryFactory

RepositoryFactory -> ChangeStateController : courses

deactivate RepositoryFactory

ChangeStateController -> CourseRepository : findByCode(code)

activate CourseRepository

CourseRepository ->ChangeStateController : course

deactivate CourseRepository

ChangeStateController -> CourseManagementService : confirmForEnrollment(course)

activate CourseManagementService

CourseManagementService -> ChangeStateController : confirmation

deactivate CourseManagementService

ChangeStateController -> ChangeStateEnrollmentUI : course

deactivate ChangeStateController

ChangeStateEnrollmentUI -> Manager : Shows course information and asks \n if he wants to change its state

deactivate ChangeStateEnrollmentUI

Manager -> ChangeStateEnrollmentUI : Accepts

activate ChangeStateEnrollmentUI

ChangeStateEnrollmentUI -> ChangeStateController : changeState(course)

activate ChangeStateController

ChangeStateController -> CourseManagementService : changeState(course)

activate CourseManagementService

CourseManagementService -> ChangeStateController : save(course)

deactivate CourseManagementService

ChangeStateController -> ChangeStateEnrollmentUI : success

deactivate ChangeStateController

ChangeStateEnrollmentUI -> Manager : success

deactivate ChangeStateEnrollmentUI

@enduml