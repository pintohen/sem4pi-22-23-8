@startuml
'http://plantuml.com/skinparam.html
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

class RegisterUserUI <<presentation>>
class AddUserController <<application>>
class AuthorizationService <<service>>
class UserManagementService <<service>>
class AuthzRegistry <<util>>
class UserBuilder <<builder>>
class "user:User" <<domain>>
class PersistenceContext  <<persistence>>
class RepositoryFactory  <<factory>>
class UserRepository <<repository>>

RegisterUserUI --> AddUserController : theController
AddUserController --> AuthorizationService : authz
AddUserController --> UserManagementService : userSvc
AddUserController ..> AuthzRegistry
AuthzRegistry ..> AuthorizationService
AuthzRegistry ..> UserManagementService
UserManagementService --> UserBuilder : userBuilder
UserBuilder --> "user:User"
UserManagementService --> PersistenceContext : persistence
PersistenceContext --> RepositoryFactory : factory
RepositoryFactory --> UserRepository : userRepository
UserManagementService --> UserRepository : userRepository

RegisterUserUI : doShow()
RegisterUserUI : chooseRole()
UserRepository : save(User)
AddUserController : addUser(String, String, String, String, Role, String, String, String)
AddUserController : addUser(String, String, String, String, Role, String, String, String, Calendar)
AuthorizationService : ensureAuthenticatedUserHasAnyOf(Role...)
UserManagementService : registerNewUser(String, String, String, String, Role, String, String, String, Calendar)
UserManagementService : generateMecNumber()
UserBuilder : with(String, String, String, String, String, Role, String)
UserBuilder : createdOn(Calendar)
UserBuilder : withAcronym(String)
UserBuilder : withMecanographicNumber(String)
UserBuilder : build()
PersistenceContext : repositories()
RepositoryFactory : users()
"user:User" : User(ShortName, FullName, Password, EmailAddress, Role, BirthDate, MecanographicNumber, TaxPayerNumber, Acronym, Calendar)
"user:User" : validateParameters(ShortName, FullName, EmailAddress, Role, Password, Calendar)
"user:User" : validateMecNumber(MecanographicNumber, Role)
"user:User" : validateMecNumber(Acronym, Role)
AuthzRegistry : authorizationService()
AuthzRegistry : userService()


@enduml